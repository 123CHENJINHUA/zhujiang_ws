# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'arrive.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from ui_pkg.scripts.One_cabin.closethedoor_ui import ClosethedoorDialog  # 正确导入ClosethedoorDialog类



class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(863, 464)
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(260, 230, 361, 61))
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setStyleSheet("QLabel {\n"
"    color: rgba(37, 37, 37, 120);                  /* 略浅于主文本 */\n"
"    font-size: 20px;\n"
"    font-weight: normal;\n"
"    font-family: \'Microsoft YaHei\';\n"
"    background: transparent;\n"
"}\n"
"")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(380, 50, 120, 120))
        self.label.setMinimumSize(QtCore.QSize(120, 120))
        self.label.setMaximumSize(QtCore.QSize(120, 120))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/icons/icons/takeaway.png"))
        self.label.setScaledContents(True)
        self.label.setStyleSheet("background-color: white;")
        self.label.setObjectName("label")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(250, 310, 371, 60))
        self.pushButton_2.setMinimumSize(QtCore.QSize(140, 54))
        self.pushButton_2.setMaximumSize(QtCore.QSize(400, 60))
        self.pushButton_2.setStyleSheet("QPushButton {\n"
"    background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 #61A9FF, stop:1 #182490);\n"
"    color: #FFF;\n"
"    border-radius: 16px;\n"
"    font-size: 24px;\n"
"    font-family: \'Microsoft YaHei\';\n"
"    font-weight: bold;\n"
"    min-width: 140px;\n"
"    min-height: 54px;\n"
"}\n"
"QPushButton:pressed {\n"
"    background: #f0f6ff;\n"
"}\n"
"")
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(280, 180, 321, 61))
        self.label_2.setStyleSheet("QLabel {\n"
"    color:  rgb(37, 37, 37);\n"
"    font-size: 38px;\n"
"    font-weight: bold;\n"
"    font-family: \'Microsoft YaHei\';\n"
"    background: transparent;\n"
"}\n"
"")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(780, 30, 26, 26))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap(":/icons/icons/CustomerService.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setStyleSheet("background-color: white;")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(743, 60, 100, 15))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(7)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("QLabel{\n"
" color: rgba(37, 37, 37, 150);\n"
" background-color: white;\n"
"}")
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_3.setText(_translate("Dialog", "请点击按钮打开仓门"))
        self.pushButton_2.setText(_translate("Dialog", "打开仓门"))
        self.label_2.setText(_translate("Dialog", "包裹已到达"))
        self.label_5.setText(_translate("Dialog", "联系客服"))


class ArriveDialog(QtWidgets.QDialog):
    def __init__(self, parent=None, comm_node=None):
        super().__init__(parent)
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)
        self.comm_node = comm_node

        # 设置无边框窗口
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        
        # 设置圆角背景
        self.setStyleSheet("""
            QDialog {
                background-color: white;
                border-radius: 18px;
            }
        """)
        
        # 连接按钮点击事件
        self.ui.pushButton_2.clicked.connect(self.open_cabinet_dialog)
        self.ui.label_4.mousePressEvent = self.contact_customer_service
        self.ui.label_5.mousePressEvent = self.contact_customer_service
    
    def open_cabinet_dialog(self):
        try:
                
                self.comm_node.publish_door_open(door_number=1)  # 发布开门消息，假设门编号为1

                # 创建关门对话框
                self.close_dialog = ClosethedoorDialog(self.parent(),self.comm_node)
                
                # 获取父窗口的中心位置
                parent = self.parent()
                parent_center = parent.rect().center()
                parent_global_center = parent.mapToGlobal(parent_center)
                
                # 计算对话框应该放置的位置（居中）
                dialog_width = self.close_dialog.width()
                dialog_height = self.close_dialog.height()
                x = parent_global_center.x() - dialog_width // 2
                y = parent_global_center.y() - dialog_height // 2
                
                # 设置新窗口位置
                self.close_dialog.move(x, y)
                
                # 确保对话框在父窗口内部
                self.close_dialog.setFixedSize(dialog_width, dialog_height)
                
                # 显示新窗口
                self.close_dialog.show()
                
                # 关闭当前窗口
                self.close()
        except Exception as e:
                print(f"错误: {e}")
                import traceback
                traceback.print_exc()

    
    def contact_customer_service(self, event):
        # 显示联系客服的消息
        self.ui.label_5.setText("400-123-4567")
        self.ui.label_5.setStyleSheet("""
            QLabel{
                color: #4285f4;
                background-color: white;
            }
        """)






import ui_pkg.scripts.One_cabin.resources_rc as resources_rc 
